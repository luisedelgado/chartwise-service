services:
  ssh-tunnel:
    image: alpine
    command: >
      sh -c "apk add --no-cache openssh-client &&
      mkdir -p ~/.ssh &&
      chmod 700 ~/.ssh &&
      cp /ssh-keys/staging-bastion-host-key-pair.pem ~/.ssh/id_rsa &&
      chmod 600 ~/.ssh/id_rsa &&
      echo 'Host *' > ~/.ssh/config &&
      echo '  StrictHostKeyChecking no' >> ~/.ssh/config &&
      ssh -N -L 0.0.0.0:5433:chartwise-database-instance-staging.cx44ewmqqt62.us-east-2.rds.amazonaws.com:5432 ec2-user@3.145.210.176"
    volumes:
      - ./app/dependencies/core/bastion_host/staging-bastion-host-key-pair.pem:/ssh-keys/staging-bastion-host-key-pair.pem:ro
    networks:
      - app-network
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"  # Expose the internal port 8080 and map it to host port 8080
      - "5678:5678"  # Expose the debugger port
    environment:
      PYTHONUNBUFFERED: "True"
      APP_HOME: "/app"
      DEBUG_MODE: "true"
      AWS_BASTION_RDS_DATABASE_ENDPOINT: "ssh-tunnel"
      AWS_BASTION_RDS_DB_PORT: "5433"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_SESSION_TOKEN: "${AWS_SESSION_TOKEN}"
    env_file:
      - .env
    volumes:
      - .:/app  # Mount the current directory into the container
    command: "python3 -Xfrozen_modules=off -m uvicorn app.main:app --host 0.0.0.0 --port 8080"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2g"
    restart: always  # Ensure the service is restarted on failure
    depends_on:
      - ssh-tunnel
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

# Running command:
# docker-compose up --build
